plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}

def secureProps = new Properties()
if (file("../secure.properties").exists()) {
    file("../secure.properties")?.withInputStream { secureProps.load(it) }
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.shahin.meistersearch"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        /**
         * Host Base Url
         */
        buildConfigField "String", "HOST", (secureProps.getProperty("HOST") ?: "")

        /**
         * Access Token
         * Usually we receive tokens from server so wouldn't need such parameter ever
         * This access token is only added for demonstration purposes and will expire soon
         */
        buildConfigField "String", "ACCESS_TOKEN", (secureProps.getProperty("ACCESS_TOKEN") ?: "")
        buildConfigField "String", "ACCESS_TOKEN_PREFIX", (secureProps.getProperty("ACCESS_TOKEN_PREFIX") ?: "")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
        dataBinding = true
    }
}

dependencies {

    // Test unit
    testImplementation('junit:junit:4.13.2')
    testImplementation('androidx.test.ext:junit:1.1.2')
    testImplementation('com.google.truth:truth:1.1') // truth
    testImplementation('org.koin:koin-test:2.2.1') // Koin testing tools
    testImplementation('org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3')
    testImplementation('androidx.arch.core:core-testing:2.1.0') // architecture
    testImplementation('org.mockito:mockito-core:2.23.4') // mock
    testImplementation('androidx.paging:paging-common-ktx:3.0.0') // paging
    testImplementation('androidx.room:room-testing:2.3.0') // room

    // Test instrumented
    androidTestImplementation('androidx.test.ext:junit:1.1.2')
    androidTestImplementation('com.google.truth:truth:1.1') // truth
    androidTestImplementation('androidx.test.espresso:espresso-core:3.3.0') // espresso
    androidTestImplementation('androidx.test:runner:1.3.0')
    androidTestImplementation('androidx.test:rules:1.3.0') // rules
    androidTestImplementation('org.koin:koin-test:2.2.1') // Koin testing tools
    androidTestImplementation('androidx.navigation:navigation-testing:2.3.5') // nav ui
    androidTestImplementation('androidx.arch.core:core-testing:2.1.0') // architecture
    androidTestImplementation('org.mockito:mockito-core:2.23.4') // mock
    androidTestImplementation('androidx.paging:paging-common-ktx:3.0.0') // paging
    androidTestImplementation('androidx.room:room-testing:2.3.0') // room

    // debug test
    debugImplementation('androidx.fragment:fragment-testing:1.3.4') // fragment test scenario


    // core
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    implementation('androidx.core:core-ktx:1.5.0')

    // ui
    implementation('androidx.appcompat:appcompat:1.3.0')
    implementation('com.google.android.material:material:1.3.0')
    implementation('androidx.constraintlayout:constraintlayout:2.0.4')

    // Nav ui
    implementation('androidx.navigation:navigation-fragment-ktx:2.3.5')
    implementation('androidx.navigation:navigation-ui-ktx:2.3.5')

    // lifecycle extensions
    implementation('androidx.lifecycle:lifecycle-livedata-ktx:2.3.1')
    implementation('androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1')

    // Kotlin Coroutines
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3')
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3')

    // Koin
    implementation('org.koin:koin-core:2.2.1')
    implementation('org.koin:koin-androidx-scope:2.2.1')
    implementation('org.koin:koin-androidx-viewmodel:2.2.1')

    // Retrofit as Http client
    implementation('com.squareup.retrofit2:retrofit:2.9.0')
    implementation('com.squareup.retrofit2:converter-gson:2.9.0')
    implementation('com.squareup.okhttp3:logging-interceptor:4.9.0')

    // Glide Image Processing
    implementation('com.github.bumptech.glide:glide:4.11.0')
    kapt('com.github.bumptech.glide:compiler:4.11.0')

    // paging
    implementation('androidx.paging:paging-runtime-ktx:3.0.0')

    // room
    implementation('androidx.room:room-ktx:2.3.0')
    kapt('androidx.room:room-compiler:2.3.0')
}